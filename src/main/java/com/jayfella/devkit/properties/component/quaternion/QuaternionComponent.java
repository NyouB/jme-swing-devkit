package com.jayfella.devkit.properties.component.quaternion;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jayfella.devkit.properties.component.AbstractSDKComponent;
import com.jayfella.devkit.properties.component.FloatFormatFactory;
import com.jme3.math.Quaternion;
import java.awt.Dimension;
import java.awt.Insets;
import java.beans.PropertyChangeListener;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;

public class QuaternionComponent extends AbstractSDKComponent<Quaternion> {

  private JPanel contentPanel;
  private JFormattedTextField xTextField;
  private JFormattedTextField yTextField;
  private JFormattedTextField zTextField;
  private JLabel propertyNameLabel;
  private JFormattedTextField wTextField;

  public QuaternionComponent(Quaternion quaternion) {
    super(quaternion);
    $$$setupUI$$$();
    setComponent(quaternion);
  }

  public QuaternionComponent(Quaternion quaternion, String propertyName) {
    super(quaternion, propertyName);
    $$$setupUI$$$();
    setComponent(quaternion);
  }

  public void setComponent(Quaternion value) {
    if (value == null) {
      value = new Quaternion();
    }
    component = value;
    this.wTextField.setValue(value.getW());
    this.xTextField.setValue(value.getX());
    this.yTextField.setValue(value.getY());
    this.zTextField.setValue(value.getZ());
  }

  public void bind() {
    PropertyChangeListener propertyChangeListener = evt -> {
      setComponent(computeValue());
      firePropertyChange(propertyName, null, component);
    };
    wTextField.addPropertyChangeListener(propertyChangeListener);
    xTextField.addPropertyChangeListener(propertyChangeListener);
    yTextField.addPropertyChangeListener(propertyChangeListener);
    zTextField.addPropertyChangeListener(propertyChangeListener);
  }

  public void setPropertyName(String propertyName) {
    propertyNameLabel.setText("Quaternion: " + propertyName);
  }

  private Quaternion computeValue() {
    float w = ((Number) wTextField.getValue()).floatValue();
    float x = ((Number) xTextField.getValue()).floatValue();
    float y = ((Number) yTextField.getValue()).floatValue();
    float z = ((Number) zTextField.getValue()).floatValue();
    return new Quaternion(x, y, z, w);
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    contentPanel = new JPanel();
    contentPanel.setLayout(new GridLayoutManager(7, 2, new Insets(0, 0, 0, 0), -1, -1));
    propertyNameLabel = new JLabel();
    propertyNameLabel.setText("Quaternion");
    contentPanel.add(propertyNameLabel,
        new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
            false));
    final Spacer spacer1 = new Spacer();
    contentPanel.add(spacer1, new GridConstraints(6, 0, 1, 2, GridConstraints.ANCHOR_CENTER,
        GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
        false));
    final JLabel label1 = new JLabel();
    label1.setText("x");
    contentPanel.add(label1,
        new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
            false));
    final JLabel label2 = new JLabel();
    label2.setText("y");
    contentPanel.add(label2,
        new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
            false));
    final JLabel label3 = new JLabel();
    label3.setText("z");
    contentPanel.add(label3,
        new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
            false));
    contentPanel.add(xTextField, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW,
        GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    contentPanel.add(yTextField, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW,
        GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    contentPanel.add(zTextField, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW,
        GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    final JSeparator separator1 = new JSeparator();
    contentPanel.add(separator1,
        new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null,
            null, 0, false));
    final JLabel label4 = new JLabel();
    label4.setText("w");
    contentPanel.add(label4,
        new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
            false));
    contentPanel.add(wTextField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST,
        GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW,
        GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return contentPanel;
  }


  private void createUIComponents() {
    wTextField = new JFormattedTextField();
    xTextField = new JFormattedTextField();
    yTextField = new JFormattedTextField();
    zTextField = new JFormattedTextField();

    FloatFormatFactory floatFormatFactory = new FloatFormatFactory();

    wTextField.setFormatterFactory(floatFormatFactory);
    xTextField.setFormatterFactory(floatFormatFactory);
    yTextField.setFormatterFactory(floatFormatFactory);
    zTextField.setFormatterFactory(floatFormatFactory);

    bind();
  }

  public JFormattedTextField getxTextField() {
    return xTextField;
  }

  public void setxTextField(JFormattedTextField xTextField) {
    this.xTextField = xTextField;
  }

  public JFormattedTextField getyTextField() {
    return yTextField;
  }

  public void setyTextField(JFormattedTextField yTextField) {
    this.yTextField = yTextField;
  }

  public JFormattedTextField getzTextField() {
    return zTextField;
  }

  public void setzTextField(JFormattedTextField zTextField) {
    this.zTextField = zTextField;
  }

  public JFormattedTextField getwTextField() {
    return wTextField;
  }

  public void setwTextField(JFormattedTextField wTextField) {
    this.wTextField = wTextField;
  }

  @Override
  public JComponent getJComponent() {
    return contentPanel;
  }

  @Override
  public void cleanup() {

  }
}
