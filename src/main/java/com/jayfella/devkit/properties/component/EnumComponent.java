package com.jayfella.devkit.properties.component;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import com.jme3.math.Quaternion;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeListener;
import java.util.EnumSet;
import javax.swing.*;
import java.awt.*;
import java.lang.reflect.Method;

public class EnumComponent extends JMEDevKitComponentSwingView<Enum<?>> {

    private JPanel contentPanel;
    private JComboBox<Enum<?>> valueComboBox;
    private JLabel propertyNameLabel;

    public EnumComponent(Enum<?> value) {
        super(value);
        $$$setupUI$$$();
        setValue(value);
    }

    public EnumComponent(Enum<?> value, String propertyName) {
        super(value, propertyName);
        $$$setupUI$$$();
        setValue(value);
    }

    public void setValue(Enum<?> value) {
       valueComboBox.setSelectedItem(value);
    }

    public void bind() {
        ItemListener itemListener = evt -> {
            saveViewValueToModel();
            firePropertyChange(propertyName , null, component);
        };
        valueComboBox.addItemListener(itemListener);
    }

    private void saveViewValueToModel() {
        setValue(getInputValue());
    }

    private Enum<?> getInputValue() {
        return (Enum<?>) valueComboBox.getSelectedItem();
    }

    @Override
    public void setPropertyName(String propertyName) {
        super.setPropertyName(propertyName);
        propertyNameLabel.setText("Enum: " + propertyName);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        propertyNameLabel = new JLabel();
        propertyNameLabel.setText("Enum");
        contentPanel.add(propertyNameLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPanel.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        valueComboBox = new JComboBox();
        contentPanel.add(valueComboBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        contentPanel.add(separator1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }

    private void createUIComponents() {

        contentPanel = this;
        valueComboBox.setModel(new DefaultComboBoxModel<>(
            (Enum<?>[]) EnumSet.allOf(component.getClass()).toArray()));

        valueComboBox.addActionListener(actionEvent -> {
            Enum<?> newValue = (Enum<?>) valueComboBox.getSelectedItem();
            setValue(newValue);
        });
        bind();

    }
}
