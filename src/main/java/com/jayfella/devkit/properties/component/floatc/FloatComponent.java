package com.jayfella.devkit.properties.component.floatc;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jayfella.devkit.properties.component.AbstractSDKComponent;
import com.jayfella.devkit.properties.component.FloatFormatFactory;
import java.awt.Dimension;
import java.awt.Insets;
import java.beans.PropertyChangeListener;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;

public class FloatComponent extends AbstractSDKComponent<Float> {

    private JPanel contentPanel;
    private JFormattedTextField valueTextField;
    private JLabel propertyNameLabel;


    public FloatComponent() {
        this(0f, null);
    }

    public FloatComponent(String propertyName) {
        this(0f, propertyName);
    }

    public FloatComponent(Float value) {
        this(value, null);
    }

    public FloatComponent(Float value, String propertyName) {
        super(value, propertyName);
        $$$setupUI$$$();
        setComponent(value);
        setPropertyName(propertyName);
    }

    public void bind() {
        PropertyChangeListener propertyChangeListener = evt -> {
            setComponent(computeValue());
            firePropertyChange(propertyName, null, component);
        };
        valueTextField.addPropertyChangeListener(propertyChangeListener);
    }

    @Override
    public void setPropertyName(String propertyName) {
        super.setPropertyName(propertyName);
        propertyNameLabel.setText("Float: " + propertyName);
    }

    private Float computeValue() {
        return ((Number) valueTextField.getValue()).floatValue();
    }

    @Override
    public void setComponent(Float value) {
        if (value == null) {
            value = 0f;
        }
        component = value;
        this.valueTextField.setValue(value);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
     * call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        final Spacer spacer1 = new Spacer();
        contentPanel.add(spacer1, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null,
            null, 0,
            false));
        contentPanel
            .add(valueTextField, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_WEST,
                GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW,
                GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        propertyNameLabel = new JLabel();
        propertyNameLabel.setText("Float");
        contentPanel.add(propertyNameLabel,
            new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null,
                null, 0,
                false));
        final JSeparator separator1 = new JSeparator();
        contentPanel.add(separator1,
            new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_BOTH,
                GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null,
                null,
                null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }

    private void createUIComponents() {
        valueTextField = new JFormattedTextField();
        FloatFormatFactory floatFormatFactory = new FloatFormatFactory();
        valueTextField.setFormatterFactory(floatFormatFactory);
        bind();
    }

    @Override
    public JComponent getJComponent() {
        return contentPanel;
    }
}
